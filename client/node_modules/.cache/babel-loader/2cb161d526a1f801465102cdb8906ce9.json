{"ast":null,"code":"import _objectSpread from \"/Users/giangnguyen/clothing-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAqDKoHLWptuuXwwHwth2dYJiAX8h6EL4E\",\n  authDomain: \"clothing-store-082019.firebaseapp.com\",\n  databaseURL: \"https://clothing-store-082019.firebaseio.com\",\n  projectId: \"clothing-store-082019\",\n  storageBucket: \"\",\n  messagingSenderId: \"937460022374\",\n  appId: \"1:937460022374:web:409509828b188bb4\"\n}; // Firebase needs to be initialized before any calling\n\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const collectionRef = firestore.collection(\"users\");\n  console.log(userRef);\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log(collectionSnapshot);\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdOn = new Date();\n\n    try {\n      // userRef.set has only one argument as an object\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdOn\n      }, additionalData));\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","console","log","snapShot","get","collectionSnapshot","exists","displayName","email","createdOn","Date","set","error","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,uCAFO;AAGnBC,EAAAA,WAAW,EAAE,8CAHM;AAInBC,EAAAA,SAAS,EAAE,uBAJQ;AAKnBC,EAAAA,aAAa,EAAE,EALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB,C,CAUA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAEA,QAAMQ,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMN,aAAa,CAACK,GAAd,EAAjC;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,kBAAZ;;AAEA,MAAI,CAACF,QAAQ,CAACG,MAAd,EAAsB;AAAA,UACZC,WADY,GACWd,QADX,CACZc,WADY;AAAA,UACCC,KADD,GACWf,QADX,CACCe,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF;AACA,YAAMf,OAAO,CAACgB,GAAR;AAAcJ,QAAAA,WAAd;AAA2BC,QAAAA,KAA3B;AAAkCC,QAAAA;AAAlC,SAAgDf,cAAhD,EAAN;AACD,KAHD,CAGE,OAAOkB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCU,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOlB,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMmB,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb;AACP,OAAO,MAAMlB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMmB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAA7B;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAejC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAqDKoHLWptuuXwwHwth2dYJiAX8h6EL4E\",\n  authDomain: \"clothing-store-082019.firebaseapp.com\",\n  databaseURL: \"https://clothing-store-082019.firebaseio.com\",\n  projectId: \"clothing-store-082019\",\n  storageBucket: \"\",\n  messagingSenderId: \"937460022374\",\n  appId: \"1:937460022374:web:409509828b188bb4\"\n};\n\n// Firebase needs to be initialized before any calling\nfirebase.initializeApp(firebaseConfig);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection(\"users\");\n  console.log(userRef);\n\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log(collectionSnapshot);\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdOn = new Date();\n\n    try {\n      // userRef.set has only one argument as an object\n      await userRef.set({ displayName, email, createdOn, ...additionalData });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}