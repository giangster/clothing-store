{"ast":null,"code":"import _objectSpread from \"/Users/giangnguyen/clothing-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/giangnguyen/clothing-store/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/giangnguyen/clothing-store/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport { signUpStart } from \"../../redux/user/user-actions\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const onChange = e => {\n    e.preventDefault();\n    setCredentials(_objectSpread({}, userCredentials, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"I don't have an account\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Sign up easily now!\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    required: true,\n    type: \"text\",\n    name: \"displayName\",\n    label: \"\\x1CDisplay Name\",\n    value: displayName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    required: true,\n    type: \"email\",\n    name: \"email\",\n    label: \"\\x1CEmail\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    required: true,\n    type: \"password\",\n    name: \"password\",\n    label: \"\\x1CPassword\",\n    value: password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    required: true,\n    type: \"password\",\n    name: \"confirmPassword\",\n    label: \"\\x1CConfirm Password\",\n    value: confirmPassword,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Sign up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: user => dispatch(signUpStart(user))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","SignUpContainer","SignUpTitle","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","onChange","e","preventDefault","target","name","value","onSubmit","alert","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport { signUpStart } from \"../../redux/user/user-actions\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const onChange = e => {\n    e.preventDefault();\n    setCredentials({ ...userCredentials, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  return (\n    <SignUpContainer>\n      <SignUpTitle>I don't have an account</SignUpTitle>\n      <p>Sign up easily now!</p>\n\n      <form className=\"sign-up-form\" onSubmit={onSubmit}>\n        <FormInput\n          required\n          type=\"text\"\n          name=\"displayName\"\n          label=\"\u001cDisplay Name\"\n          value={displayName}\n          onChange={onChange}\n        />\n        <FormInput\n          required\n          type=\"email\"\n          name=\"email\"\n          label=\"\u001cEmail\"\n          value={email}\n          onChange={onChange}\n        />\n        <FormInput\n          required\n          type=\"password\"\n          name=\"password\"\n          label=\"\u001cPassword\"\n          value={password}\n          onChange={onChange}\n        />\n        <FormInput\n          required\n          type=\"password\"\n          name=\"confirmPassword\"\n          label=\"\u001cConfirm Password\"\n          value={confirmPassword}\n          onChange={onChange}\n        />\n        <CustomButton type=\"submit\">Sign up</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: user => dispatch(signUpStart(user))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}