{"ast":null,"code":"import _objectSpread from \"/Users/giangnguyen/clothing-store/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CartActionTypes } from \"./cart-types.js\";\nimport { addItemToCart, removeItem } from \"./cart-utils\";\nconst ORIGIN_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = ORIGIN_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_STATUS:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItem(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/client/src/redux/cart/cart-reducer.js"],"names":["CartActionTypes","addItemToCart","removeItem","ORIGIN_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_STATUS","ADD_ITEM","payload","REMOVE_ITEM","REMOVE_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":";AAAA,SAASA,eAAT,QAAgC,iBAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,cAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKJ,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKZ,eAAe,CAACa,WAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEH,UAAU,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFvB;;AAIF,SAAKZ,eAAe,CAACc,qBAArB;AACE,+BACKP,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EADlC;AAFb;;AAOF,SAAKjB,eAAe,CAACkB,UAArB;AACE,+BACKX,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF;AACE,aAAOE,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from \"./cart-types.js\";\nimport { addItemToCart, removeItem } from \"./cart-utils\";\n\nconst ORIGIN_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = ORIGIN_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_STATUS:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItem(state.cartItems, action.payload)\n      };\n    case CartActionTypes.REMOVE_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}