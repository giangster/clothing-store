{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop-types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop-actions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport default function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/redux/shop/shop-sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas","all"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BI,+BAD+B,EAE/BM,QAF+B,CAAjC;AAKA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GATD,CASE,OAAOC,GAAP,EAAY;AACZ,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,GAAG,CAACC,OAAL,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,UAAU,CACdG,eAAe,CAACc,uBADF,EAEdT,qBAFc,CAAhB;AAID;AAED,eAAe,UAAUU,SAAV,GAAsB;AACnC,QAAMC,GAAG,CAAC,CAAClB,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop-types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"./shop-actions\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport default function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}