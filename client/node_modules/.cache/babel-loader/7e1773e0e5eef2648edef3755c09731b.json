{"ast":null,"code":"import _objectSpread from \"/Users/giangnguyen/clothing-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { googleProvider, createUserProfileDocument, auth } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user-types\";\nimport { signInSuccess, signInFailure } from \"./user-actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* googleSignIn() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {} catch (err) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* checkUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/redux/user/user-sagas.js"],"names":["takeLatest","call","put","all","googleProvider","createUserProfileDocument","auth","UserActionTypes","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","err","message","googleSignIn","signInWithPopup","user","emailSignIn","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,cADF,EAEEC,yBAFF,EAGEC,IAHF,QAIO,+BAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA4BM,QAA5B,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMZ,GAAG,CAACM,aAAa;AAAGO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACO,aAAa,CAACQ,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,YAAV,GAAyB;AAC9B,MAAI;AAAA,iBACe,MAAMb,IAAI,CAACc,eAAL,CAAqBhB,cAArB,CADrB;AAAA,UACMiB,IADN,QACMA,IADN;;AAEF,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOJ,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACO,aAAa,CAACQ,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC7D,MAAI;AAAA,kBACe,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMJ,IADN,SACMA,IADN;;AAEF,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOJ,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACO,aAAa,CAACQ,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,MAAI,CACH,CADD,CACE,OAAOV,GAAP,EAAY,CAAE;AACjB;AAED,OAAO,UAAUW,mBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACO,eAAe,CAACsB,oBAAjB,EAAuCV,YAAvC,CAAhB;AACD;AAED,OAAO,UAAUW,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACO,eAAe,CAACwB,mBAAjB,EAAsCT,WAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,gBAAV,GAA6B;AAClC,QAAMhC,UAAU,CAACO,eAAe,CAAC0B,kBAAjB,EAAqCN,mBAArC,CAAhB;AACD;AAED,eAAe,UAAUO,SAAV,GAAsB;AACnC,QAAM/B,GAAG,CAAC,CAACF,IAAI,CAAC2B,mBAAD,CAAL,EAA4B3B,IAAI,CAAC6B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport {\n  googleProvider,\n  createUserProfileDocument,\n  auth\n} from \"../../firebase/firebase.utils\";\n\nimport UserActionTypes from \"./user-types\";\n\nimport { signInSuccess, signInFailure } from \"./user-actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* googleSignIn() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* emailSignIn({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n  } catch (err) {}\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport function* checkUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}