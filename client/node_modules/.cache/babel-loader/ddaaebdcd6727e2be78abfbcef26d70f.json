{"ast":null,"code":"var _jsxFileName = \"/Users/giangnguyen/clothing-store/src/pages/collection/collection.component.jsx\";\nimport React from \"react\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport { selectCollection } from \"../../redux/shop/shop-selectors\";\nimport { connect } from \"react-redux\";\nimport { CollectionPageContainer, TitleContainer, ItemsContainer } from \"./collection.styles\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log(\"I am subscribing\");\n    const unsubscribeFromCollections = firestore.collection(\"collections\").onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      console.log(\"I am unsubscribing\");\n      unsubscribeFromCollections();\n    };\n  });\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, title), React.createElement(ItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/pages/collection/collection.component.jsx"],"names":["React","CollectionItem","selectCollection","connect","CollectionPageContainer","TitleContainer","ItemsContainer","CollectionPage","collection","useEffect","console","log","unsubscribeFromCollections","firestore","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,uBADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,qBAJP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMC,0BAA0B,GAAGC,SAAS,CACzCL,UADgC,CACrB,aADqB,EAEhCM,UAFgC,CAErBC,QAAQ,IAAIL,OAAO,CAACC,GAAR,CAAYI,QAAZ,CAFS,CAAnC;AAIA,WAAO,MAAM;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAC,MAAAA,0BAA0B;AAC3B,KAHD;AAID,GAVQ,CAAT;AADyC,QAYjCI,KAZiC,GAYhBR,UAZgB,CAYjCQ,KAZiC;AAAA,QAY1BC,KAZ0B,GAYhBT,UAZgB,CAY1BS,KAZ0B;AAczC,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,KAAjB,CADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAxBD;;AA0BA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cf,EAAAA,UAAU,EAAEN,gBAAgB,CAACqB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAenB,OAAO,CAACkB,eAAD,CAAP,CAAyBd,cAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport { selectCollection } from \"../../redux/shop/shop-selectors\";\nimport { connect } from \"react-redux\";\nimport {\n  CollectionPageContainer,\n  TitleContainer,\n  ItemsContainer\n} from \"./collection.styles\";\n\nconst CollectionPage = ({ collection }) => {\n  useEffect(() => {\n    console.log(\"I am subscribing\");\n    const unsubscribeFromCollections = firestore\n      .collection(\"collections\")\n      .onSnapshot(snapshot => console.log(snapshot));\n\n    return () => {\n      console.log(\"I am unsubscribing\");\n      unsubscribeFromCollections();\n    };\n  });\n  const { title, items } = collection;\n\n  return (\n    <CollectionPageContainer>\n      <TitleContainer>{title}</TitleContainer>\n      <ItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </ItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}