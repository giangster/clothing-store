{"ast":null,"code":"var _jsxFileName = \"/Users/giangnguyen/clothing-store/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth } from \"firebase\";\nimport { SignInContainer, ButtonsContainer, SignInTitle } from \"./sign-in.styles\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user-actions\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign in with your email and password.\"), React.createElement(\"form\", {\n      onSubmit: emailSignInStart(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      label: \"\\x1CEmail\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      required: true,\n      type: \"password\",\n      name: \"password\",\n      label: \"\\x1CPassword\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ButtonsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      signInWithGoogle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","SignInContainer","ButtonsContainer","SignInTitle","googleSignInStart","emailSignInStart","SignIn","constructor","props","onChange","e","preventDefault","setState","target","name","value","onSubmit","state","email","password","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth } from \"firebase\";\nimport {\n  SignInContainer,\n  ButtonsContainer,\n  SignInTitle\n} from \"./sign-in.styles\";\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from \"../../redux/user/user-actions\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  onChange = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n\n    const { emailSignInStart } = this.props;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n  };\n\n  render() {\n    const { googleSignInStart } = this.props;\n\n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <p>Sign in with your email and password.</p>\n\n        <form onSubmit={emailSignInStart()}>\n          <FormInput\n            required\n            type=\"email\"\n            name=\"email\"\n            label=\"\u001cEmail\"\n            value={this.state.email}\n            onChange={this.onChange}\n          />\n          <FormInput\n            required\n            type=\"password\"\n            name=\"password\"\n            label=\"\u001cPassword\"\n            value={this.state.password}\n            onChange={this.onChange}\n          />\n          <ButtonsContainer>\n            <CustomButton type=\"submit\">Sign in</CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              signInWithGoogle\n            >\n              Sign in with Google\n            </CustomButton>\n          </ButtonsContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}