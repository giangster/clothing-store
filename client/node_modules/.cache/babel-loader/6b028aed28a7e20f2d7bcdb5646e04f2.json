{"ast":null,"code":"import _objectSpread from \"/Users/giangnguyen/clothing-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { googleProvider, createUserProfileDocument, auth, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user-types\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user-actions\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* googleSignIn() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(signUpFailure(err));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onsignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onsignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/giangnguyen/clothing-store/src/redux/user/user-sagas.js"],"names":["takeLatest","call","put","all","googleProvider","createUserProfileDocument","auth","getCurrentUser","UserActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","err","message","googleSignIn","signInWithPopup","user","emailSignIn","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onsignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport {\n  googleProvider,\n  createUserProfileDocument,\n  auth,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nimport UserActionTypes from \"./user-types\";\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess\n} from \"./user-actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* googleSignIn() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* emailSignIn({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n\nexport function* signUp({ payload: { displayName, email, password } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (err) {\n    yield put(signUpFailure(err));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onsignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport default function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onsignUpSuccess)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}